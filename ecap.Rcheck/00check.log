* using log directory ‘/Users/bradleyrava/Documents/Research Projects/Irrational Exuberance/R Package/ecap.Rcheck’
* using R version 3.6.0 (2019-04-26)
* using platform: x86_64-apple-darwin15.6.0 (64-bit)
* using session charset: UTF-8
* using options ‘--no-manual --as-cran’
* checking for file ‘ecap/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘ecap’ version ‘0.1.0’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking serialization versions ... OK
* checking whether package ‘ecap’ can be installed ... WARNING
Found the following significant warnings:
  Warning: /Users/bradleyrava/Documents/Research Projects/Irrational Exuberance/R Package/ecap.Rcheck/00_pkg_src/ecap/man/ecap_param_est.Rd:52: unexpected section header '\keyword'
  Warning: /Users/bradleyrava/Documents/Research Projects/Irrational Exuberance/R Package/ecap.Rcheck/00_pkg_src/ecap/man/ecap_param_est.Rd:53: unexpected section header '\keyword'
  Warning: /Users/bradleyrava/Documents/Research Projects/Irrational Exuberance/R Package/ecap.Rcheck/00_pkg_src/ecap/man/ecap_param_est.Rd:54: unexpected END_OF_INPUT '
See ‘/Users/bradleyrava/Documents/Research Projects/Irrational Exuberance/R Package/ecap.Rcheck/00install.out’ for details.
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... WARNING
Non-standard license specification:
  What license is it under?
Standardizable: FALSE
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
ecap_param_est: no visible global function definition for ‘quantile’
ecap_param_est : <anonymous>: no visible binding for global variable
  ‘lambda_grid’
ecap_param_est: no visible binding for global variable ‘lambda_grid’
ecap_param_est: no visible binding for global variable
  ‘lambda_opt_param’
ecap_param_est: no visible binding for global variable ‘gamma_grid’
ecap_param_est: no visible binding for global variable
  ‘gamma_opt_param’
eta_min_fcn: no visible global function definition for ‘solve.QP’
myns: no visible global function definition for ‘quantile’
myns: no visible global function definition for ‘splineDesign’
tweedie_adj: no visible global function definition for ‘quantile’
tweedie_adj : <anonymous>: no visible binding for global variable
  ‘lambda_grid’
tweedie_adj: no visible binding for global variable ‘lambda_grid’
tweedie_adj: no visible binding for global variable ‘gamma_grid’
tweedie_adj: no visible binding for global variable ‘const_grid’
tweedie_adj : <anonymous>: no visible global function definition for
  ‘js_grid_fcn’
Undefined global functions or variables:
  const_grid gamma_grid gamma_opt_param js_grid_fcn lambda_grid
  lambda_opt_param quantile solve.QP splineDesign
Consider adding
  importFrom("stats", "quantile")
to your NAMESPACE file.
* checking Rd files ... WARNING
prepare_Rd: ecap_adj.Rd:8-10: Dropping empty section \description
prepare_Rd: ecap_adj.Rd:20-22: Dropping empty section \details
prepare_Rd: ecap_adj.Rd:38-40: Dropping empty section \note
prepare_Rd: ecap_adj.Rd:44-46: Dropping empty section \seealso
checkRd: (5) ecap_adj.Rd:0-61: Must have a \description
prepare_Rd: man/ecap_param_est.Rd:52: unexpected section header '\keyword'
prepare_Rd: man/ecap_param_est.Rd:53: unexpected section header '\keyword'
prepare_Rd: man/ecap_param_est.Rd:54: unexpected END_OF_INPUT '
'
prepare_Rd: ecap_param_est.Rd:21-23: Dropping empty section \details
prepare_Rd: ecap_param_est.Rd:33-35: Dropping empty section \note
prepare_Rd: ecap_param_est.Rd:27-29: Dropping empty section \references
prepare_Rd: ecap_param_est.Rd:39-41: Dropping empty section \seealso
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented code objects:
  ‘assign_train’ ‘eta_min_fcn’ ‘mle_binomial’ ‘myns’ ‘pFlip’
  ‘risk_cvsplit_fcn’ ‘tweed.adj.fcn’ ‘tweedie_adj’ ‘tweedie_est’
All user-level objects in a package should have documentation entries.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking for code/documentation mismatches ... WARNING
Functions or methods with usage in documentation object 'ecap_adj' but not in code:
  ‘ecap_adj’

Codoc mismatches from documentation object 'ecap_param_est':
ecap_param_est
  Code: function(prob_tilde, win_var, win_id, bias_indicator = F)
  Docs: function(x)
  Argument names in code not in docs:
    prob_tilde win_var win_id bias_indicator
  Argument names in docs not in code:
    x
  Mismatches in argument names:
    Position: 1 Code: prob_tilde Docs: x

* checking Rd \usage sections ... OK
* checking Rd contents ... WARNING
Auto-generated content requiring editing in Rd object 'ecap_adj':
  \keyword{~kwd1}
  \keyword{~kwd2}

* checking for unstated dependencies in examples ... OK
* checking examples ... ERROR
Running examples in ‘ecap-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: ecap_adj
> ### Title: Function that takes in a vector of probability estimates and
> ###   returns the Excess Certainty Adjusted Probability (ECAP) estimates.
> ### Aliases: ecap_adj
> 
> ### ** Examples
> 
> ## Start with a vector of probability estimates
> p <- runif(1000, 0, 1)
> 
> ## The function is currently defined as
> p_ecap <- ecap_adj(p)
Error in ecap_adj(p) : could not find function "ecap_adj"
Execution halted
* DONE
Status: 1 ERROR, 6 WARNINGs, 1 NOTE
